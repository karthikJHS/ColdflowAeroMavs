%% Pipe and Orifice Sizing with Mass Flow Rate Limit (400 g/s)
clear; clc; close all;

% === Inputs ===
rho = 1.2041;          % kg/m^3 (air at 20°C) This isnt accurate
mu = 1.825e-5;         % Pa.s

D_inch = 0.25;         % inches
D = D_inch * 25.4e-3;  % m (convert to meters)

L = 5.0;               % m (pipe length)
deltaP_pipe = 5000;    % Pa (allowed pressure drop for pipe only)

% Flow regime limits
Re_laminar_upper = 2000;
Re_turbulent_lower = 4000;

f_laminar = 64;        % laminar friction factor constant

% Max mass flow rate limit from pressure regulator
mdot_limit = 0.4;      % kg/s (400 g/s)

% Relative roughness: assume commercial steel pipe (~0.045 mm absolute)
e = 0.045e-3;          % absolute roughness [m]
e_D = e / D;           % relative roughness

% === Iterative solution for velocity and friction factor ===
V = 1.0; % initial guess for velocity (m/s)
tol = 1e-6;
err = 1;
max_iter = 100;
iter = 0;

while err > tol && iter < max_iter
    Re = rho * V * D / mu;
    if Re <= Re_laminar_upper
        f = f_laminar / Re;
        flow_regime = 'Laminar';
    elseif Re >= Re_turbulent_lower
        f = (-1.8 * log10( (6.9/Re) + ( (e_D/3.7)^1.11 ) ))^-2;
        flow_regime = 'Turbulent';
    else
        f_lam = f_laminar / Re_laminar_upper;
        f_turb = (-1.8 * log10( (6.9/Re_turbulent_lower) + ( (e_D/3.7)^1.11 ) ))^-2;
        f = f_lam + (f_turb - f_lam) * (Re - Re_laminar_upper) / (Re_turbulent_lower - Re_laminar_upper);
        flow_regime = 'Transitional';
    end
    
    V_new = sqrt( (2 * deltaP_pipe * D) / (f * L * rho) );
    err = abs(V_new - V);
    V = V_new;
    iter = iter + 1;
end

A_pipe = pi * (D/2)^2;
mdot = rho * A_pipe * V;

% Enforce max mass flow limit
if mdot > mdot_limit
    fprintf('Mass flow rate %.3f kg/s exceeds regulator limit of %.3f kg/s.\n', mdot, mdot_limit);
    fprintf('Capping mass flow rate to regulator max.\n');
    mdot = mdot_limit;
else
    fprintf('Mass flow rate within regulator limit.\n');
end

fprintf('\n=== Pipe Flow ===\n');
fprintf('Pipe Inner Diameter: %.3f mm\n', D*1000);
fprintf('Pipe Length: %.1f m\n', L);
fprintf('Flow Velocity: %.3f m/s\n', V);
fprintf('Reynolds Number: %.1f\n', Re);
fprintf('Friction Factor: %.4f\n', f);
fprintf('Flow Regime: %s\n', flow_regime);
fprintf('Pressure Drop (Pipe): %.1f Pa\n', deltaP_pipe);
fprintf('Final Mass Flow Rate: %.5f kg/s\n', mdot);
fprintf('Iterations: %d\n', iter);

% === Report assumed surface roughness ===
fprintf('\n=== Pipe Surface Roughness ===\n');
fprintf('Assumed Pipe Material: Commercial Steel\n');
fprintf('Absolute Roughness: %.4e m\n', e);
fprintf('Relative Roughness (e/D): %.6f\n', e_D);

% === Orifice sizing based on (possibly capped) mdot ===
Cd = 0.8;
gamma = 1.4;
R = 287;
T0 = 293;
P0 = 3e5;  % Upstream absolute pressure [Pa]

sqrt_term = sqrt(gamma / (R * T0));
factor = (2 / (gamma + 1)) ^ ((gamma + 1) / (2 * (gamma - 1)));

A_orifice = mdot / (Cd * P0 * sqrt_term * factor);
orifice_d = sqrt(4 * A_orifice / pi);

fprintf('\n=== Orifice Sizing ===\n');
fprintf('Ideal Orifice Diameter: %.3f mm\n', orifice_d * 1000);

% === Match orifice diameter to standard drill sizes ===
standard_drills_mm = [0.5:0.1:2.9, 3:0.2:10];

orifice_d_mm = orifice_d * 1000;
idx = find(standard_drills_mm >= orifice_d_mm, 1, 'first');

if ~isempty(idx)
    selected_drill = standard_drills_mm(idx);
    fprintf('Recommended Standard Orifice Diameter: %.2f mm\n', selected_drill);
else
    fprintf('WARNING: No suitable standard drill size found — custom machining needed.\n');
end

% === Compute Outlet Pressure ===
% Assume:
%   P0 (absolute) = Upstream supply
%   Pipe drop: deltaP_pipe
%   Orifice drop: approximate = (P0 - P_downstream)
% So:
%   P_outlet = P0 - deltaP_pipe - (orifice drop)
%   But orifice drop = P0 - P_amb => so:
%   P_outlet = P_amb = 101325 Pa (for vented flow)

P_amb = 101325; % ambient absolute pressure [Pa]
P_orifice_drop = P0 - P_amb;
P_outlet = P0 - P_orifice_drop - deltaP_pipe;

fprintf('\n=== Outlet Pressure ===\n');
fprintf('Assuming vented flow:\n');
fprintf('Ambient Pressure: %.1f Pa\n', P_amb);
fprintf('Upstream Pressure: %.1f Pa\n', P0);
fprintf('Pipe Drop: %.1f Pa\n', deltaP_pipe);
fprintf('Orifice Drop: %.1f Pa\n', P_orifice_drop);
fprintf('Computed Outlet Pressure: %.1f Pa (should be near ambient)\n', P_outlet);

